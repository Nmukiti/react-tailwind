{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAuCeA,EArCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAChC,OACI,sBAAKC,UAAU,6CAAf,UACD,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC9C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAKb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAAEC,EAAKC,GAAP,OACN,uBAAkBV,UAAU,6FAA5B,cAEIS,IAFOC,YCLRC,EAtBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAOpC,OACE,qBAAKf,UAAU,iDAAf,SACE,sBAAMgB,SANS,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAIad,UAAU,kBAApC,SACE,sBAAKA,UAAU,6DAAf,UACA,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAOrB,UAAU,kHAAkHsB,KAAK,OAAOC,YAAY,yBAClM,wBAAQvB,UAAU,yIACqDsB,KAAK,SAD5E,4BCwBOE,MAlCf,WAAe,MAGeX,mBAAS,IAHxB,mBAGNY,EAHM,KAGEC,EAHF,OAKqBb,oBAAS,GAL9B,mBAKNc,EALM,KAKKC,EALL,OAMWf,mBAAS,IANpB,mBAMNgB,EANM,KAMAC,EANA,KAkBb,OAVAC,qBAAU,WACRC,MAAM,qEAAD,OAAsEH,EAAtE,kCACFI,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,MACfT,GAAa,MAEdU,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QACzB,CAACV,IAGF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA8B,IAAjBF,EAAOiB,QAAe,oBAAI1C,UAAU,qCAAd,6BAEpC2B,EAAY,oBAAI3B,UAAU,qCAAd,wBAAoE,qBAAKA,UAAU,yBAAf,SAC9EyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM8C,aCzBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.13c6a115.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({image}) => {\r\n    const tags = image.tags.split(',');\r\n  return (\r\n      <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n     <img src={image.webformatURL} alt=\"\" className=\"w-full\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map(( tag, index)=> (\r\n            <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1\r\n            text-sm font-semibold text-gray-700 mr-2\">\r\n              #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { useState} from 'react'\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n  return (\r\n    <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n        <input onChange={e => setText(e.target.value)}className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\" />\r\n        <button className=\"flex-shrink-0 bg-green-500 hover:bg-green-700 border-green-500 \r\n         hover:border-green-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\r\n        Search\r\n      </button>\r\n      </div>\r\n      </form>\r\n\t</div>\r\n  )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  //create state\n  //empty array which gets filled when we make request\n  const [images, setImages] = useState([]);\n  //once we are done fetching we can set it to false\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=23539789-a55746300d6f9fa5025c9db84&q=${term}&image_type=photo&pretty=true`)\n      .then(res=> res.json())\n      .then(data=> {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch(err=>console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)}/>\n\n      {!isLoading && images.length ===0 && <h1 className=\"text-6xl text-center mx-auto mt-32\">No images found</h1>}\n\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>: <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image}/>\n        ))}\n      </div>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}